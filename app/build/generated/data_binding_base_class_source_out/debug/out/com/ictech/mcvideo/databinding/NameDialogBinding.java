// Generated by view binder compiler. Do not edit!
package com.ictech.mcvideo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.ictech.mcvideo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NameDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView btnSubmit;

  @NonNull
  public final CardView cvName;

  @NonNull
  public final EditText etNickname;

  @NonNull
  public final LinearLayout llName;

  @NonNull
  public final LinearLayout llSubmit;

  private NameDialogBinding(@NonNull ConstraintLayout rootView, @NonNull TextView btnSubmit,
      @NonNull CardView cvName, @NonNull EditText etNickname, @NonNull LinearLayout llName,
      @NonNull LinearLayout llSubmit) {
    this.rootView = rootView;
    this.btnSubmit = btnSubmit;
    this.cvName = cvName;
    this.etNickname = etNickname;
    this.llName = llName;
    this.llSubmit = llSubmit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NameDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NameDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.name_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NameDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSubmit;
      TextView btnSubmit = rootView.findViewById(id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.cvName;
      CardView cvName = rootView.findViewById(id);
      if (cvName == null) {
        break missingId;
      }

      id = R.id.etNickname;
      EditText etNickname = rootView.findViewById(id);
      if (etNickname == null) {
        break missingId;
      }

      id = R.id.llName;
      LinearLayout llName = rootView.findViewById(id);
      if (llName == null) {
        break missingId;
      }

      id = R.id.llSubmit;
      LinearLayout llSubmit = rootView.findViewById(id);
      if (llSubmit == null) {
        break missingId;
      }

      return new NameDialogBinding((ConstraintLayout) rootView, btnSubmit, cvName, etNickname,
          llName, llSubmit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
